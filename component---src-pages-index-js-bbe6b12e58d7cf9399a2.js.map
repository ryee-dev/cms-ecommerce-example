{"version":3,"sources":["webpack:///./src/components/product-list.js","webpack:///./src/components/dadjokes.js","webpack:///./src/components/FakeData.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["ProductListContainer","styled_components_browser_es","default","div","withConfig","displayName","product_list","_ref","data","react_default","a","createElement","gatsby_browser_entry","query","render","dist","ThemeProvider","GridContainer","allDatoCmsProduct","edges","map","_ref2","product","node","key","id","style","textAlign","ProductImage","src","image","url","name","price","react_buttons_dist","Button","danger","pill","className","data-item-id","data-item-name","data-item-price","data-item-image","data-item-url","display","margin","_2451298148","img","g","h","n","A","dadjokes","JokeContainer","dadjokesGraphQl","joke","_2877627682","Component","__webpack_exports__","layout","214","e","t","d","m","s","i","o","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","props","Consumer","staticQueryData","children","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","module","exports","__webpack_require__","SnipContainer","HeaderContainer","header","siteTitle","background","marginBottom","primary","react_theming_dist","layout_Layout","Fragment","Helmet_default","title","site","siteMetadata","_755544856","prop_types_default","224","227","r","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","c","230","248","fakerData","animals","249","permalink"],"mappings":"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","file":"component---src-pages-index-js-bbe6b12e58d7cf9399a2.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n// import Img from 'gatsby-image'\r\nimport faker from 'faker';\r\nimport { ThemeProvider } from '@zendeskgarden/react-theming';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport '@zendeskgarden/react-buttons/dist/styles.css';\r\n\r\nconst ProductListContainer = styled.div`\r\n  margin: 1rem 3rem;\r\n`;\r\n\r\nconst ProductList = ({ data }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query ProductsQuery {\r\n        allDatoCmsProduct {\r\n          edges {\r\n            node {\r\n              id\r\n              slug\r\n              name\r\n              price\r\n              image {\r\n                url\r\n                sizes(maxWidth: 300, imgixParams: { fm: \"png\" }) {\r\n                  ...GatsbyDatoCmsSizes\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <ProductListContainer>\r\n        <h1>Products</h1>\r\n        <ThemeProvider>\r\n          <GridContainer>\r\n                {data.allDatoCmsProduct.edges.map(({ node: product }) => (\r\n                  <div key={product.id} style={{ textAlign: \"center\" }}>\r\n                    <ProductImage src={product.image.url}/>\r\n                    <h2>{product.name}</h2>\r\n                    <h3>${product.price}</h3>\r\n                    <Button\r\n                      danger pill\r\n                      className=\"snipcart-add-item\"\r\n                      data-item-id={product.id}\r\n                      data-item-name={product.name}\r\n                      data-item-price={product.price}\r\n                      data-item-image={product.image.url}\r\n                      data-item-url=\"/\"\r\n                      style={{display: \"block\", margin: \"0 auto\"}}\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n          </GridContainer>\r\n        </ThemeProvider>\r\n      </ProductListContainer>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default ProductList\r\n\r\nconst GridContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  flex-flow: wrap;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProductImage = styled.img`\r\n  display: block;\r\n  margin: 0 auto;\r\n  height: 150px;\r\n`;\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport { StaticQuery, graphql } from \"gatsby\"\n\nclass DadJokes extends React.Component {\n  \n  // handleNewJoke = (joke) => {\n  //   this.setState({\n  //     joke: joke\n  //   });\n  // }\n  \n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n        query DadJokeQuery {\n          dadjokesGraphQl {\n            joke {\n              id\n              joke\n              permalink\n            }\n          }\n        }\n      `}\n        render={data => (\n          <JokeContainer>\n            <h2>Daily Dad Joke</h2>\n            <p>{data.dadjokesGraphQl.joke.joke}</p>\n                {/*<img src={`https://icanhazdadjoke.com/j/${data.dadjokesGraphQl.joke.id}.png`} alt=\"joke-image\" />*/}\n          </JokeContainer>\n        )}\n      />\n    )\n  }\n}\n\n\nexport default DadJokes\n\nconst JokeContainer = styled.div`\n  margin: 1rem 3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  flex-direction: column;\n  \n  img {\n    width: 35vw;\n  }\n  \n  p {\n    font-size: 1.25rem;\n  }\n`;","import React from 'react'\nimport styled from 'styled-components'\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst FakeData = (data) => (\n  <StaticQuery\n    query={graphql`\n    query FakerQuery {\n      fakerData {\n        image {\n          animals\n        }\n      }\n    }\n  `}\n    render={data => (\n      <FakerContainer>\n        <img src={`${data.fakerData.image.animals}`} alt=\"fake-image\" />\n      </FakerContainer>\n    )}\n  />\n)\n\n\nexport default FakeData\n\nconst FakerContainer = styled.div`\n  margin: 1rem 3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  flex-direction: column;\n  \n  img {\n    height: 25vh;\n  }\n  \n  p {\n    font-size: 1.25rem;\n  }\n`;","import React from 'react'\r\n// import { Link } from 'gatsby'\r\n\r\n// zen desk imports\r\nimport '@zendeskgarden/react-buttons/dist/styles.css';\r\nimport { ThemeProvider } from '@zendeskgarden/react-theming';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\n\r\n// components\r\nimport Layout from '../components/layout';\r\nimport ProductList from '../components/product-list';\r\nimport DadJokes from '../components/dadjokes';\r\nimport FakeData from '../components/FakeData';\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <DadJokes />\r\n    {/*<FakeData />*/}\r\n    <ProductList />\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Menu, Item } from '@zendeskgarden/react-menus';\r\nimport '@zendeskgarden/react-menus/dist/styles.css';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport '@zendeskgarden/react-buttons/dist/styles.css';\r\nimport { ThemeProvider } from '@zendeskgarden/react-theming';\r\n\r\nconst SnipContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n`;\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <div style={{ background: 'maroon', marginBottom: '1.45rem', }}>\r\n    <HeaderContainer>\r\n      <h1 className=\"whiteText\" style={{ margin: 0 }}>\r\n        {siteTitle}\r\n      </h1>\r\n      <SnipContainer>\r\n        <Button\r\n          primary\r\n          style={{ margin: \"1rem\" }}\r\n          className=\"snipcart-checkout\"\r\n        >\r\n          View Cart\r\n        </Button>\r\n        <ThemeProvider>\r\n          <div className=\"whiteText snipcart-summary\">\r\n            <p>Cart: (<span className=\"snipcart-total-items\"></span>)</p>\r\n            <p>Total: <span className=\"snipcart-total-price\"></span></p>\r\n          </div>\r\n        </ThemeProvider>\r\n        \r\n      </SnipContainer>\r\n    </HeaderContainer>\r\n  </div>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from './header'\r\nimport '../styles/main.scss'\r\n\r\nconst Layout = ({ children, data }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Helmet title={data.site.siteMetadata.title} />\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div className=\"container\">\r\n          {children}\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}