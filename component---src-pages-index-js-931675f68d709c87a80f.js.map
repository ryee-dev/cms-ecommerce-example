{"version":3,"sources":["webpack:///./src/components/product-list.js","webpack:///./src/components/dadjokes.js","webpack:///./src/components/FakeData.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["ProductListContainer","styled_components_browser_esm","default","div","withConfig","displayName","product_list","_ref","data","react_default","a","createElement","gatsby_browser_entry","StaticQuery","query","render","dist","ThemeProvider","GridContainer","allDatoCmsProduct","edges","map","_ref2","product","node","key","id","style","textAlign","ProductImage","src","image","url","name","price","react_buttons_dist","Button","danger","pill","className","data-item-id","data-item-name","data-item-price","data-item-image","data-item-url","display","margin","_2451298148","img","h","g","n","A","dadjokes","JokeContainer","dadjokesGraphQl","joke","_2877627682","Component","__webpack_exports__","layout","203","t","e","r","d","u","w","l","s","i","o","c","withPrefix","navigate","push","replace","navigateTo","m","p","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","props","Consumer","staticQueryData","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","module","exports","__webpack_require__","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","216","219","SnipContainer","HeaderContainer","header","siteTitle","background","marginBottom","primary","react_theming_dist","layout_Layout","Fragment","Helmet_default","title","site","siteMetadata","_755544856","prop_types_default","298","slug","sizes","base64","aspectRatio","srcSet"],"mappings":"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","file":"component---src-pages-index-js-931675f68d709c87a80f.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n// import Img from 'gatsby-image'\r\nimport faker from 'faker';\r\nimport { ThemeProvider } from '@zendeskgarden/react-theming';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport '@zendeskgarden/react-buttons/dist/styles.css';\r\n\r\nconst ProductListContainer = styled.div`\r\n  margin: 1rem 3rem;\r\n`;\r\n\r\nconst ProductList = ({ data }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query ProductsQuery {\r\n        allDatoCmsProduct {\r\n          edges {\r\n            node {\r\n              id\r\n              slug\r\n              name\r\n              price\r\n              image {\r\n                url\r\n                sizes(maxWidth: 300, imgixParams: { fm: \"png\" }) {\r\n                  ...GatsbyDatoCmsSizes\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <ProductListContainer>\r\n        <h1>Products</h1>\r\n        <ThemeProvider>\r\n          <GridContainer>\r\n                {data.allDatoCmsProduct.edges.map(({ node: product }) => (\r\n                  <div key={product.id} style={{ textAlign: \"center\" }}>\r\n                    <ProductImage src={product.image.url}/>\r\n                    <h2>{product.name}</h2>\r\n                    <h3>${product.price}</h3>\r\n                    <Button\r\n                      danger pill\r\n                      className=\"snipcart-add-item\"\r\n                      data-item-id={product.id}\r\n                      data-item-name={product.name}\r\n                      data-item-price={product.price}\r\n                      data-item-image={product.image.url}\r\n                      data-item-url=\"/\"\r\n                      style={{display: \"block\", margin: \"0 auto\"}}\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n          </GridContainer>\r\n        </ThemeProvider>\r\n      </ProductListContainer>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default ProductList\r\n\r\nconst GridContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  flex-flow: wrap;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProductImage = styled.img`\r\n  display: block;\r\n  margin: 0 auto;\r\n  height: 150px;\r\n`;\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport { StaticQuery, graphql } from \"gatsby\"\n\nclass DadJokes extends React.Component {\n  \n  // handleNewJoke = (joke) => {\n  //   this.setState({\n  //     joke: joke\n  //   });\n  // }\n  \n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n        query DadJokeQuery {\n          dadjokesGraphQl {\n            joke {\n              id\n              joke\n              permalink\n            }\n          }\n        }\n      `}\n        render={data => (\n          <JokeContainer>\n            <h2>Daily Dad Joke</h2>\n            <p>{data.dadjokesGraphQl.joke.joke}</p>\n                {/*<img src={`https://icanhazdadjoke.com/j/${data.dadjokesGraphQl.joke.id}.png`} alt=\"joke-image\" />*/}\n          </JokeContainer>\n        )}\n      />\n    )\n  }\n}\n\n\nexport default DadJokes\n\nconst JokeContainer = styled.div`\n  margin: 1rem 3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  flex-direction: column;\n  \n  img {\n    width: 35vw;\n  }\n  \n  p {\n    font-size: 1.25rem;\n  }\n`;","import React from 'react'\nimport styled from 'styled-components'\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst FakeData = (data) => (\n  <StaticQuery\n    query={graphql`\n    query FakerQuery {\n      fakerData {\n        image {\n          animals\n        }\n      }\n    }\n  `}\n    render={data => (\n      <FakerContainer>\n        <img src={`${data.fakerData.image.animals}`} alt=\"fake-image\" />\n      </FakerContainer>\n    )}\n  />\n)\n\n\nexport default FakeData\n\nconst FakerContainer = styled.div`\n  margin: 1rem 3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  flex-direction: column;\n  \n  img {\n    height: 25vh;\n  }\n  \n  p {\n    font-size: 1.25rem;\n  }\n`;","import React from 'react'\r\n// import { Link } from 'gatsby'\r\n\r\n// zen desk imports\r\nimport '@zendeskgarden/react-buttons/dist/styles.css';\r\nimport { ThemeProvider } from '@zendeskgarden/react-theming';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\n\r\n// components\r\nimport Layout from '../components/layout';\r\nimport ProductList from '../components/product-list';\r\nimport DadJokes from '../components/dadjokes';\r\nimport FakeData from '../components/FakeData';\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <DadJokes />\r\n    {/*<FakeData />*/}\r\n    <ProductList />\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Menu, Item } from '@zendeskgarden/react-menus';\r\nimport '@zendeskgarden/react-menus/dist/styles.css';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport '@zendeskgarden/react-buttons/dist/styles.css';\r\nimport { ThemeProvider } from '@zendeskgarden/react-theming';\r\n\r\nconst SnipContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n`;\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <div style={{ background: 'maroon', marginBottom: '1.45rem', }}>\r\n    <HeaderContainer>\r\n      <h1 className=\"whiteText\" style={{ margin: 0 }}>\r\n        {siteTitle}\r\n      </h1>\r\n      <SnipContainer>\r\n        <Button\r\n          primary\r\n          style={{ margin: \"1rem\" }}\r\n          className=\"snipcart-checkout\"\r\n        >\r\n          View Cart\r\n        </Button>\r\n        <ThemeProvider>\r\n          <div className=\"whiteText snipcart-summary\">\r\n            <p>Cart: (<span className=\"snipcart-total-items\"></span>)</p>\r\n            <p>Total: <span className=\"snipcart-total-price\"></span></p>\r\n          </div>\r\n        </ThemeProvider>\r\n        \r\n      </SnipContainer>\r\n    </HeaderContainer>\r\n  </div>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from './header'\r\nimport '../styles/main.scss'\r\n\r\nconst Layout = ({ children, data }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Helmet title={data.site.siteMetadata.title} />\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div className=\"container\">\r\n          {children}\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}